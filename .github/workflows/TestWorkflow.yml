name: Push Workflow

on:
  push:
    branches-ignore:
      - 'master'
      - 'release/next'
env:
  CI: true
  LANG: en_US.UTF-8
  API_LEVEL: 33

concurrency:
  group: ci-push-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: macos-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
#
#      - name: Enable KVM
#        run: |
#          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
#          sudo udevadm control --reload-rules
#          sudo udevadm trigger --name-match=kvm


      - name: Setup
        uses: ./.github/actions/setup
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ env.API_LEVEL }}

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ env.API_LEVEL }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."


      - name: Setup appium
        run: |
          npm install -g appium
          npm install -g appium-doctor
          appium --version
          appium driver doctor uiautomator2
          

      - name: run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ env.API_LEVEL }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew embedded:connectedCheck